name: Production | Build and Deploy to Hetzner

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: abler-search-api
  HETZNER_CLUSTER: production
  DEPLOYMENT_NAME: abler-search-api
  IMAGE: abler-search-api

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login, build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          file: infra/k8s/Dockerfile
          tags: produtosabler/abler-search-api:${{ github.sha }},produtosabler/abler-search-api:production,produtosabler/abler-search-api:latest

      # Verificar se a imagem foi publicada
      - name: Verify Docker Image
        run: |
          echo "Verificando imagem no Docker Hub..."
          curl -s "https://hub.docker.com/v2/repositories/produtosabler/abler-search-api/tags/" | grep -o '"name":"[^"]*"' || true

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
      
      # Deploy the Docker image to the Hetzner cluster
      - name: Deploy
        run: |-
          # Aplicar o deployment
          kubectl apply -f infra/k8s/production/deployment.yaml -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production
          
          # Atualizar a imagem e forçar um novo pull
          kubectl set image deployment/abler-search-api abler-search-api=produtosabler/abler-search-api:${{ github.sha }} -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production
          
          # Deletar os pods existentes para forçar recriação
          kubectl delete pods -l app=abler-search-api -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production
          
          # Aguardar o rollout
          kubectl rollout status deployment/abler-search-api -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production

      # Verificar status do pod após o deploy
      - name: Check Pod Status
        if: always()
        run: |
          echo "Aguardando 30 segundos para o pod iniciar..."
          sleep 30
          
          echo "Status do Pod:"
          kubectl get pods -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production
          
          echo "Detalhes do Pod:"
          POD_NAME=$(kubectl get pods -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production -l app=abler-search-api -o jsonpath="{.items[0].metadata.name}")
          
          echo "Events do Pod:"
          kubectl get events -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production --field-selector involvedObject.name=$POD_NAME
          
          echo "Descrição detalhada do Pod:"
          kubectl describe pod $POD_NAME -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production
          
          echo "Logs do Pod (se disponível):"
          kubectl logs $POD_NAME -n ats --kubeconfig=infra/k8s/production/kubeconfig-k8s-abler-production --previous || true